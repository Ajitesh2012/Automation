timestamps{

node () {
    
    withCredentials([string(credentialsId: 'DD', variable: 'API_DD')]){
    cleanWs()
                stage ('Pull_Code and Build') {
                   checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/Ajitesh2012/Juiceshop.git']]]) 
        sh """npm install"""
        sh """sudo docker build -t Ajitesh2012/juiceshop:latest ."""
                }
                
                stage ('Check For Secrets-Talisman') {
                 
                          sh """/home/Ajitesh2012/Shell_Scripts/talisman/talisman2html.sh"""

                }
                
                stage ('DependencyScan-snyk - Scan') {
               
                sh """#!/bin/bash
                mkdir testresults
                snyk test --json --severity-threshold=low > testresults/snyk_report.json
                exit 0"""

        sh """/home/Ajitesh2012/Shell_Scripts/DependencyScan-snyk/Snyk2DD.sh"""
                    
                }
                
                stage ('ScanDependency-retirejs - Build') {
            sh """retire --exitwith=0 --outputformat=json --outputpath=testresults/RetireResults.json """     
            sh """/home/Ajitesh2012/Shell_Scripts/Retirejs-scan/Retire2HTML.sh"""
            sh """/home/Ajitesh2012/Shell_Scripts/Retirejs-scan/Retire2DD.sh"""
                }
                
                stage ('SAST_Sonarqube - Build') {
                    
         def scannerHome = tool 'SonarScanner';
            withSonarQubeEnv(installationName:'SonarQube_Sever',credentialsId: 'sonartoken') { 
              sh """${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=Juice \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://localhost:9000"""
        }
        
        sh """/home/Ajitesh/Shell_Scripts/SonarQube/Sonar2Html.sh"""
        
        sh """/home/Ajitesh/Shell_Scripts/SonarQube/Sonar2DD.sh"""
                }
                
                stage ('Selelnium+Zap - Checkout') {
                    
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/Ajitesh2012/Juiceshop.git']]]) 
        sh """/home/Ajitesh/Shell_Scripts/ZAP+Selenium/test.sh"""
        sh """/home/Ajitesh/Shell_Scripts/ZAP+Selenium/Zap2DD.sh"""
                archiveArtifacts allowEmptyArchive: true, artifacts: 'testresults/*, SeleniumTutorial/target/surefire-reports/' 
                }
}
        
    }

}
Â© 2020 GitHub, Inc.
